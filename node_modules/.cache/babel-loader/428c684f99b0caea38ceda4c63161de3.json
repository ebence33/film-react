{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IN-BR-016\\\\Desktop\\\\film-react\\\\film-react\\\\src\\\\composants\\\\Listitems.js\";\nimport React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport VideoCurrent from \"./Videocurrent\";\nimport VideoDetail from \"./Videodetails\";\nimport ModalVideo from \"./ModalVideo\";\n\nclass Listitems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resultat: [],\n      isLoad: true,\n      Videourl: \"\",\n      TitreVideo: \"\",\n      DescriptionVideo: \"\",\n      showModalVideo: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/api/films\").then(res => res.json()).then(data => this.setState({\n      resultat: data,\n      isLoad: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          resultat = _this$state.resultat,\n          isLoad = _this$state.isLoad,\n          Videourl = _this$state.Videourl,\n          TitreVideo = _this$state.TitreVideo,\n          DescriptionVideo = _this$state.DescriptionVideo,\n          showModalVideo = _this$state.showModalVideo;\n    const renderitem = !isLoad ? resultat.data.map(item => {\n      return React.createElement(\"div\", {\n        className: \"VideoItem\",\n        key: item.id,\n        onClick: () => this.setState({\n          Videourl: item.url,\n          TitreVideo: item.title,\n          DescriptionVideo: item.description,\n          showModalVideo: true\n        }),\n        onLoad: () => this.setState({\n          Videourl: resultat.data[0].url,\n          TitreVideo: resultat.data[0].title,\n          DescriptionVideo: resultat.data[0].description,\n          showModalVideo: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Item, {\n        titre: item.title,\n        image: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Chargement de donn\\xE9es en cours ... \");\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ModalVideo, {\n      videoUrl: Videourl,\n      DescriptionVideo: DescriptionVideo,\n      titre: TitreVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, renderitem, \" \"));\n  }\n\n}\n\nexport default Listitems;","map":{"version":3,"sources":["C:\\Users\\IN-BR-016\\Desktop\\film-react\\film-react\\src\\composants\\Listitems.js"],"names":["React","Component","Item","VideoCurrent","VideoDetail","ModalVideo","Listitems","state","resultat","isLoad","Videourl","TitreVideo","DescriptionVideo","showModalVideo","componentDidMount","fetch","then","res","json","data","setState","render","renderitem","map","item","id","url","title","description","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,gBAAgB,EAAE,EALZ;AAMNC,MAAAA,cAAc,EAAE;AANV,KADwB;AAAA;;AAUhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,QAAQ,EAAEW,IAAZ;AAAkBV,MAAAA,MAAM,EAAE;AAA1B,KAAd,CAFhB;AAGD;;AAEDY,EAAAA,MAAM,GAAG;AAAA,wBAQH,KAAKd,KARF;AAAA,UAELC,QAFK,eAELA,QAFK;AAAA,UAGLC,MAHK,eAGLA,MAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,UALK,eAKLA,UALK;AAAA,UAMLC,gBANK,eAMLA,gBANK;AAAA,UAOLC,cAPK,eAOLA,cAPK;AASP,UAAMS,UAAU,GAAG,CAACb,MAAD,GACjBD,QAAQ,CAACW,IAAT,CAAcI,GAAd,CAAkBC,IAAI,IAAI;AACxB,aACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,GAAG,EAAEA,IAAI,CAACC,EAFZ;AAGE,QAAA,OAAO,EAAE,MACP,KAAKL,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAEc,IAAI,CAACE,GADH;AAEZf,UAAAA,UAAU,EAAEa,IAAI,CAACG,KAFL;AAGZf,UAAAA,gBAAgB,EAAEY,IAAI,CAACI,WAHX;AAIZf,UAAAA,cAAc,EAAE;AAJJ,SAAd,CAJJ;AAWE,QAAA,MAAM,EAAE,MACN,KAAKO,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAEF,QAAQ,CAACW,IAAT,CAAc,CAAd,EAAiBO,GADf;AAEZf,UAAAA,UAAU,EAAEH,QAAQ,CAACW,IAAT,CAAc,CAAd,EAAiBQ,KAFjB;AAGZf,UAAAA,gBAAgB,EAAEJ,QAAQ,CAACW,IAAT,CAAc,CAAd,EAAiBS,WAHvB;AAIZf,UAAAA,cAAc,EAAE;AAJJ,SAAd,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,IAAI,CAACG,KAAlB;AAAyB,QAAA,KAAK,EAAEH,IAAI,CAACK,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,CADF;AAwBD,KAzBD,CADiB,GA4BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDA5BF;AA8BA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAEnB,QADZ;AAEE,MAAA,gBAAgB,EAAEE,gBAFpB;AAGE,MAAA,KAAK,EAAED,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BW,UAA3B,MANF,CADF;AAUD;;AAjE+B;;AAoElC,eAAehB,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Item from \"./Item\";\r\nimport VideoCurrent from \"./Videocurrent\";\r\nimport VideoDetail from \"./Videodetails\";\r\nimport ModalVideo from \"./ModalVideo\";\r\n\r\nclass Listitems extends Component {\r\n  state = {\r\n    resultat: [],\r\n    isLoad: true,\r\n    Videourl: \"\",\r\n    TitreVideo: \"\",\r\n    DescriptionVideo: \"\",\r\n    showModalVideo: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8000/api/films\")\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ resultat: data, isLoad: false }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      resultat,\r\n      isLoad,\r\n      Videourl,\r\n      TitreVideo,\r\n      DescriptionVideo,\r\n      showModalVideo\r\n    } = this.state;\r\n    const renderitem = !isLoad ? (\r\n      resultat.data.map(item => {\r\n        return (\r\n          <div\r\n            className=\"VideoItem\"\r\n            key={item.id}\r\n            onClick={() =>\r\n              this.setState({\r\n                Videourl: item.url,\r\n                TitreVideo: item.title,\r\n                DescriptionVideo: item.description,\r\n                showModalVideo: true\r\n              })\r\n            }\r\n            onLoad={() =>\r\n              this.setState({\r\n                Videourl: resultat.data[0].url,\r\n                TitreVideo: resultat.data[0].title,\r\n                DescriptionVideo: resultat.data[0].description,\r\n                showModalVideo: true\r\n              })\r\n            }\r\n          >\r\n            <Item titre={item.title} image={item.image} />\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <p> Chargement de donn√©es en cours ... </p>\r\n    );\r\n    return (\r\n      <div className=\"row\">\r\n        <ModalVideo\r\n          videoUrl={Videourl}\r\n          DescriptionVideo={DescriptionVideo}\r\n          titre={TitreVideo}\r\n        />\r\n        <div className=\"col-md-4\">{renderitem} </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Listitems;\r\n"]},"metadata":{},"sourceType":"module"}