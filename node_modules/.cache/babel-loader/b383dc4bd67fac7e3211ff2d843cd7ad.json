{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IN-BR-016\\\\Desktop\\\\film-react\\\\film-react\\\\src\\\\composants\\\\Listitems.js\";\nimport React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport VideoCurrent from \"./Videocurrent\";\n\nclass Listitems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resultat: [],\n      isLoad: true,\n      videocourante: \"\"\n    };\n\n    this.hhandleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/api/films\").then(res => res.json()).then(data => this.setState({\n      resultat: data,\n      isLoad: false\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          resultat = _this$state.resultat,\n          isLoad = _this$state.isLoad;\n    const renderitem = !isLoad ? resultat.data.map(item => {\n      return React.createElement(\"div\", {\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(VideoCurrent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Item, {\n        titre: item.title,\n        image: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Chargement de donn\\xE9es en cours ... \");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, renderitem);\n  }\n\n}\n\nexport default Listitems;","map":{"version":3,"sources":["C:\\Users\\IN-BR-016\\Desktop\\film-react\\film-react\\src\\composants\\Listitems.js"],"names":["React","Component","Item","VideoCurrent","Listitems","state","resultat","isLoad","videocourante","hhandleChange","event","setState","target","name","value","componentDidMount","fetch","then","res","json","data","render","renderitem","map","item","handleChange","title","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADwB;;AAAA,SAahCC,aAbgC,GAahBC,KAAK,IAAI;AACvB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAjB+B;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKT,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEc,IAAZ;AAAkBb,MAAAA,MAAM,EAAE;AAA1B,KAAd,CAFhB;AAGD;;AAQDc,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKhB,KAD3B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,MADX,eACWA,MADX;AAEP,UAAMe,UAAU,GAAG,CAACf,MAAD,GACjBD,QAAQ,CAACc,IAAT,CAAcG,GAAd,CAAkBC,IAAI,IAAI;AACxB,aACE;AAAK,QAAA,OAAO,EAAE,KAAKC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,IAAI,CAACE,KAAlB;AAAyB,QAAA,KAAK,EAAEF,IAAI,CAACG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPD,CADiB,GAUjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAVF;AAYA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,UAAN,CAAP;AACD;;AAlC+B;;AAqClC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Item from \"./Item\";\r\nimport VideoCurrent from \"./Videocurrent\";\r\n\r\nclass Listitems extends Component {\r\n  state = {\r\n    resultat: [],\r\n    isLoad: true,\r\n    videocourante: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8000/api/films\")\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ resultat: data, isLoad: false }));\r\n  }\r\n\r\n  hhandleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { resultat, isLoad } = this.state;\r\n    const renderitem = !isLoad ? (\r\n      resultat.data.map(item => {\r\n        return (\r\n          <div onClick={this.handleChange}>\r\n            <VideoCurrent />\r\n            <Item titre={item.title} image={item.image} />\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <p> Chargement de donn√©es en cours ... </p>\r\n    );\r\n    return <div>{renderitem}</div>;\r\n  }\r\n}\r\n\r\nexport default Listitems;\r\n"]},"metadata":{},"sourceType":"module"}